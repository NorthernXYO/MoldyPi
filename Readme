Visit for pictures...  http://moldypi.blogspot.com/


OFFICIAL Moldy Pi Plate: A SNES + Prototype Board for the Raspberry Pi
BETA Moldy Pi Plate...

I have successfully made a SNES + Prototype board for the Raspberry Pi. This Moldy Pi Plate was named after the Adafruit Pi Plate and being that the NES and SNES are older now (Well, technology speaking) I figured I would call it the Moldy Pi Plate. This is completely open source and I will post all files including the Eagle Schematic and Layout shortly! I also have plans on making stackable Moldy Pi Plates as I want the "mold" to grow to be able to have 4 players...6 players etc..
TOP:                                                                                Bottom:


It has:
2 NES connectors built on the board
2 SNES connectors built on the board
Prototyping area
Breadboard
and connections to the GPIO pins of the Raspberry Pi

This enables everyone to not have to rip open their controllers or solder anything. Just Plug and Play!

This was only made possible with a Major Help of the following:

Adafuit Pi Plate 
http://adafruit.com/products/801



and the 

SNESDev-RPi 
http://petrockblog.wordpress.com/2012/07/03/snesdev-rpi-a-snes-adapter-for-the-raspberry-pi/


I basically was too "lazy" to rip open my SNES controllers and NES controllers and solder them and hope I did not get wires crossed, so I made a PCB that would just do this for me. I also didn't want to buy the usb controllers as I have the SNES and NES controllers already, and they are extremely cheap at any pawn shop! Yes I still have to solder the GPIO header pins on the plate and yes I have to solder the SNES connectors but this is much more forgiving and far easier for the average person, even kids. 

I wanted to make something that most people can adapt to. I want the Raspberry Pi to be successful to the education and hobby market.

I feel that this project is one step closer to helping the young generation love programming and hardware.

These boards can be on sale if anyone would like one. I will order a bulk order and sell them by kits or sell them fully assembled. 

Please follow the installation the same as SNESDev-RPi.

Thank you and have a great time playing the SNES and NES games!

Please let me know if anyone would like to have a N64, PS3, XBOX360 connector on the board. I can certainly make them.

This plate is still in BETA as I am doing testing right now. The final version will be out by the end of the month!
Chad Johnson
Electrical Engineer



Copied without permission from:
http://petrockblog.wordpress.com/2012/07/03/snesdev-rpi-a-snes-adapter-for-the-raspberry-pi/
SNESDev-RPi
Simulates a virtual keyboard for two SNES controllers that are connected to the GPIO pins of the Raspberry Pi.
Having finished the hardware part I started with the software implementation. I decided for a C program to have the possibility to keep the CPU load as low as possible. Basically, the program has to do two things: First, it has to read the state of each button. A very good source for information about the NES/SNES controllers is also the documentation of the Uzebox. Second, it has to pass button events to a virtual keyboard. The uinput kernel module can handle the input subsystem from within the user space. I stumbled across a very informative article about the uinput kernel module. It is a two-parts article with part 1 here and part 2 here. The uinput module has to be manually loaded with this command:

sudo modprobe uinput

view rawgistfile1.shThis Gist brought to you by GitHub.

To access the GPIO pins from within a C program you need to download and install the Broadcom BCM 2835 library. These commands download and install this library:

cd; 


wget http://www.open.com.au/mikem/bcm2835/bcm2835-1.3.tar.gz; 


tar xvfz bcm2835-1.3.tar.gz; 


cd bcm2835-1.3; 


./configure; 


make; 


sudo make install

view rawgistfile1.shThis Gist brought to you by GitHub.

I called the program SNESDev and created a Github repository for it. You can find it at https://github.com/petrockblog/SNESDev-RPi. Here is a demo of everything working together for a quick game of a famous kart game:

This leads us to the end of this post. So far, I did not speak about a case yet. Having some experience with other laser-cut cases I already started to design a case for the Raspberry that also contains ports for two SNES connectors. When this is finished I will write about it in another post. UPDATE: You can now find a shell script in my Github repository that automatically installs all needed packages for RetroArch and various emulator cores, as well as SNESDev.
Certainly, I left out some information that you would be interested in. So, if you have any questions, comments, or questions, just send me a mail or write some comments below â€“ I would be happy about any contributions!
Some obligatory legal stuff: The Raspberry Pi is a trademark of the Raspberry Pi foundation.
Installation
First of all, make sure that Git is installed:
sudo apt-get update
sudo apt-get install -y git
SNESDev needs the BCM 2835 library installed. It is downloaded and installed with
# install BCM library
echo "Installing BCM2835 library"
cd
wget http://www.open.com.au/mikem/bcm2835/bcm2835-1.3.tar.gz
tar -zxvf bcm2835-1.3.tar.gz
cd bcm2835-1.3
./configure
make
sudo make install
cd
rm bcm2835-1.3.tar.gz
SNESDev is downloaded and installed with
# install SNESDev
cd
git clone git://github.com/petrockblog/SNESDev-RPi.git
cd SNESDev-RPi
# make sure that old stuff is removed before compilation and linking
make clean
make
Running
In order to run SNESDev mae sure that the uinput module is loaded. You can check this with
lsmod
The module is loaded with
sudo modprobe uinput
If you want to have the uinput module automatically loaded, you can add "uinput" to the file /etc/modules.
SNESDev has to be run as background process with
sudo ~/SNESDev-RPi/bin/SNESDev &
In order to access the uinput device SNESDev has to be run as root. This is (obviously) not so nice and is currently an issue. If you have a solution or suggestion for that, feel free to submit a pull request or send me a mail!
For comments, corrections, and suggestions visit https://github.com/petrockblog/SNESDev-RPi.
Have fun!
Raspberry Pi is a trademark of the Raspberry Pi Foundation.
